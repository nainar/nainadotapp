{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { NextPageContext } from \"next\";\nimport { getSortedPostsData } from '../lib/posts';\n\nvar blogPostsXml = function blogPostsXml(blogPostsData) {\n  var latestPost = 0;\n  var postsXml = \"\";\n  blogPostsData.map(function (post) {\n    var postDate = Date.parse(post.date);\n\n    if (!latestPost || postDate > latestPost) {\n      latestPost = postDate;\n    }\n\n    postsXml += \"\\n    <url>\\n      <loc>\".concat(post.id, \"</loc>\\n      <lastmod>\").concat(postDate, \"</lastmod>\\n      <priority>0.80</priority>\\n    </url>\");\n  });\n  return {\n    postsXml: postsXml,\n    latestPost: latestPost\n  };\n};\n\nvar sitemapXml = function sitemapXml(blogPostsData) {\n  var _blogPostsXml = blogPostsXml(blogPostsData),\n      postsXml = _blogPostsXml.postsXml,\n      latestPost = _blogPostsXml.latestPost;\n\n  return \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n    <urlset xmlns=\\\"http://www.sitemaps.org/schemas/sitemap/0.9\\\">\\n    <url>\\n      <loc>https://naina.app/</loc>\\n      <lastmod>\".concat(latestPost, \"</lastmod>\\n      <priority>1.00</priority>\\n    </url>\\n    <url>\\n      <loc>https://naina.app/posts</loc>\\n      <priority>0.8</priority>\\n    </url>\\n    <url>\\n      <loc>https://naina.app/work</loc>\\n      <priority>0.7</priority>\\n    </url>\\n    <url>\\n      <loc>https://naina.app/talks</loc>\\n      <priority>0.5</priority>\\n    </url>\\n    \").concat(postsXml, \"\\n  </urlset>\");\n};\n\nvar Sitemap = function Sitemap() {};\n\nSitemap.getInitialProps = function _callee(res) {\n  var blogPostsData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          blogPostsData = getSortedPostsData();\n          res.setHeader(\"Content-Type\", \"text/xml\");\n          res.write(sitemapXml(blogPosts));\n          res.end();\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/Users/nainar/nainadotapp/pages/sitemap.xml.js"],"names":["NextPageContext","getSortedPostsData","blogPostsXml","blogPostsData","latestPost","postsXml","map","post","postDate","Date","parse","date","id","sitemapXml","Sitemap","getInitialProps","res","setHeader","write","blogPosts","end"],"mappings":";AAAA,SAASA,eAAT,QAAgC,MAAhC;AACA,SAASC,kBAAT,QAAmC,cAAnC;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,aAAD,EAAmB;AACtC,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAIC,QAAQ,GAAG,EAAf;AACAF,EAAAA,aAAa,CAACG,GAAd,CAAkB,UAAAC,IAAI,EAAI;AACxB,QAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACI,IAAhB,CAAjB;;AACA,QAAI,CAACP,UAAD,IAAeI,QAAQ,GAAGJ,UAA9B,EAA0C;AACxCA,MAAAA,UAAU,GAAGI,QAAb;AACD;;AACDH,IAAAA,QAAQ,sCAECE,IAAI,CAACK,EAFN,oCAGKJ,QAHL,4DAAR;AAMD,GAXD;AAYA,SAAO;AACLH,IAAAA,QAAQ,EAARA,QADK;AAELD,IAAAA,UAAU,EAAVA;AAFK,GAAP;AAID,CAnBD;;AAqBA,IAAMS,UAAU,GAAG,SAAbA,UAAa,CAACV,aAAD,EAAmB;AAAA,sBACHD,YAAY,CAACC,aAAD,CADT;AAAA,MAC5BE,QAD4B,iBAC5BA,QAD4B;AAAA,MAClBD,UADkB,iBAClBA,UADkB;;AAEpC,kMAIeA,UAJf,4WAmBIC,QAnBJ;AAqBD,CAvBD;;AAyBA,IAAMS,OAAO,GAAG,SAAVA,OAAU,GAAM,CAAE,CAAxB;;AAEAA,OAAO,CAACC,eAAR,GAA0B,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBb,UAAAA,aADkB,GACFF,kBAAkB,EADhB;AAExBe,UAAAA,GAAG,CAACC,SAAJ,CAAc,cAAd,EAA8B,UAA9B;AACAD,UAAAA,GAAG,CAACE,KAAJ,CAAUL,UAAU,CAACM,SAAD,CAApB;AACAH,UAAAA,GAAG,CAACI,GAAJ;;AAJwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B","sourcesContent":["import { NextPageContext } from \"next\";\nimport { getSortedPostsData } from '../lib/posts'\n\nconst blogPostsXml = (blogPostsData) => {\n  let latestPost = 0;\n  let postsXml = \"\";\n  blogPostsData.map(post => {\n    const postDate = Date.parse(post.date);\n    if (!latestPost || postDate > latestPost) {\n      latestPost = postDate;\n    }\n    postsXml += `\n    <url>\n      <loc>${post.id}</loc>\n      <lastmod>${postDate}</lastmod>\n      <priority>0.80</priority>\n    </url>`;\n  });\n  return {\n    postsXml,\n    latestPost\n  };\n};\n\nconst sitemapXml = (blogPostsData) => {\n  const { postsXml, latestPost } = blogPostsXml(blogPostsData);\n  return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n    <url>\n      <loc>https://naina.app/</loc>\n      <lastmod>${latestPost}</lastmod>\n      <priority>1.00</priority>\n    </url>\n    <url>\n      <loc>https://naina.app/posts</loc>\n      <priority>0.8</priority>\n    </url>\n    <url>\n      <loc>https://naina.app/work</loc>\n      <priority>0.7</priority>\n    </url>\n    <url>\n      <loc>https://naina.app/talks</loc>\n      <priority>0.5</priority>\n    </url>\n    ${postsXml}\n  </urlset>`;\n};\n\nconst Sitemap = () => {};\n\nSitemap.getInitialProps = async (res) => {\n  const blogPostsData = getSortedPostsData();\n  res.setHeader(\"Content-Type\", \"text/xml\");\n  res.write(sitemapXml(blogPosts));\n  res.end();\n};\n\n"]},"metadata":{},"sourceType":"module"}