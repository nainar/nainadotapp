{"ast":null,"code":"var _jsxFileName = \"/Users/nainar/nainadotapp/pages/posts.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport path from 'path';\nexport const config = {\n  amp: true\n};\nconst postsDirectory = path.join(process.cwd(), 'posts');\n\nfunction HomePage() {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"main\", {\n    className: \"jsx-4109088840\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"jsx-4109088840\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Hi! \\uD83D\\uDC4B\\uD83C\\uDFFE Yup, still Naina...\"), __jsx(\"br\", {\n    className: \"jsx-4109088840\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"jsx-4109088840\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Guess I still haven't put up any posts. Oops! \\uD83E\\uDD37\\uD83C\\uDFFE.\")), __jsx(_JSXStyle, {\n    id: \"4109088840\",\n    __self: this\n  }, \"@font-face{font-family:'Bai Jamjuree';font-style:sans-serif;src:url('https://fonts.googleapis.com/css?family=Bai+Jamjuree');}*.jsx-4109088840{font-family:'Bai Jamjuree',sans-serif;-webkit-text-decoration:none;text-decoration:none;}h1.jsx-4109088840{color:#d8156e;}main.jsx-4109088840{position:fixed;margin:0;color:#333333;top:calc(50% - 16px);left:50%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);}@media only screen and (max-width:768px){main.jsx-4109088840{top:4em;left:1em;-webkit-transform:translate(0%,0%);-ms-transform:translate(0%,0%);transform:translate(0%,0%);}}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9uYWluYXIvbmFpbmFkb3RhcHAvcGFnZXMvcG9zdHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUJnQixBQUdvQyxBQUtZLEFBSTFCLEFBR0EsQUFVTCxRQUNDLE1BYmIsQ0FHVyxFQVdxQixPQVZoQixHQWJVLFdBS0QsQUFTRixXQWI2QyxVQWN6RCxTQUN1QixvQkFWbEMsc0JBa0JFLEdBdEJGLDREQWVBIiwiZmlsZSI6Ii9Vc2Vycy9uYWluYXIvbmFpbmFkb3RhcHAvcGFnZXMvcG9zdHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTXlMYXlvdXQnO1xuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnXG5cbmV4cG9ydCBjb25zdCBjb25maWcgPSB7IGFtcDogdHJ1ZSB9O1xuY29uc3QgcG9zdHNEaXJlY3RvcnkgPSBwYXRoLmpvaW4ocHJvY2Vzcy5jd2QoKSwgJ3Bvc3RzJylcblxuZnVuY3Rpb24gSG9tZVBhZ2UoKSB7XG4gIHJldHVybiAoXG4gICAgPExheW91dD5cbiAgICAgIDxtYWluPlxuICAgICAgICAgIDxoMT5IaSEg8J+Ri/Cfj74gWXVwLCBzdGlsbCBOYWluYS4uLjwvaDE+XG4gICAgICAgICAgPGJyLz5cbiAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgR3Vlc3MgSSBzdGlsbCBoYXZlbid0IHB1dCB1cCBhbnkgcG9zdHMuIE9vcHMhIPCfpLfwn4++LlxuICAgICAgICAgIDwvZGl2PiAgICAgICAgICBcbiAgICAgIDwvbWFpbj5cbiAgICA8c3R5bGUganN4PntgXG4gICAgQGZvbnQtZmFjZSB7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAnQmFpIEphbWp1cmVlJztcbiAgICAgICAgZm9udC1zdHlsZTogc2Fucy1zZXJpZjtcbiAgICAgICAgc3JjOiB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1CYWkrSmFtanVyZWUnKTtcbiAgICB9XG4gICAgKiB7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAnQmFpIEphbWp1cmVlJywgc2Fucy1zZXJpZjtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIH1cbiAgICBoMSB7XG4gICAgICAgIGNvbG9yOiNkODE1NmU7XG4gICAgfVxuICAgIG1haW4ge1xuICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgY29sb3I6ICMzMzMzMzM7XG4gICAgICB0b3A6IGNhbGMoNTAlIC0gMTZweCk7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICB9XG4gICAgXG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgbWFpbiB7XG4gICAgICAgIHRvcDogNGVtO1xuICAgICAgICBsZWZ0OiAxZW07XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAlLCAwJSk7XG4gICAgICB9ICBcbiAgICB9XG5cbiAgYH08L3N0eWxlPlxuICAgIDwvTGF5b3V0PlxuICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBIb21lUGFnZTtcblxuZXhwb3J0IGZ1bmN0aW9uIGdldFNvcnRlZFBvc3RzRGF0YSgpIHtcbiAgLy8gR2V0IGZpbGUgbmFtZXMgdW5kZXIgL3Bvc3RzXG4gIGNvbnN0IGZpbGVOYW1lcyA9IGZzLnJlYWRkaXJTeW5jKHBvc3RzRGlyZWN0b3J5KVxuICBjb25zdCBhbGxQb3N0c0RhdGEgPSBmaWxlTmFtZXMubWFwKGZpbGVOYW1lID0+IHtcbiAgICAvLyBSZW1vdmUgXCIubWRcIiBmcm9tIGZpbGUgbmFtZSB0byBnZXQgaWRcbiAgICBjb25zdCBpZCA9IGZpbGVOYW1lLnJlcGxhY2UoL1xcLm1kJC8sICcnKVxuXG4gICAgLy8gUmVhZCBtYXJrZG93biBmaWxlIGFzIHN0cmluZ1xuICAgIGNvbnN0IGZ1bGxQYXRoID0gcGF0aC5qb2luKHBvc3RzRGlyZWN0b3J5LCBmaWxlTmFtZSlcbiAgICBjb25zdCBmaWxlQ29udGVudHMgPSBmcy5yZWFkRmlsZVN5bmMoZnVsbFBhdGgsICd1dGY4JylcblxuICAgIC8vIFVzZSBncmF5LW1hdHRlciB0byBwYXJzZSB0aGUgcG9zdCBtZXRhZGF0YSBzZWN0aW9uXG4gICAgY29uc3QgbWF0dGVyUmVzdWx0ID0gbWF0dGVyKGZpbGVDb250ZW50cylcblxuICAgIC8vIENvbWJpbmUgdGhlIGRhdGEgd2l0aCB0aGUgaWRcbiAgICByZXR1cm4ge1xuICAgICAgaWQsXG4gICAgICAuLi5tYXR0ZXJSZXN1bHQuZGF0YVxuICAgIH1cbiAgfSlcbiAgLy8gU29ydCBwb3N0cyBieSBkYXRlXG4gIHJldHVybiBhbGxQb3N0c0RhdGEuc29ydCgoYSwgYikgPT4ge1xuICAgIGlmIChhLmRhdGUgPCBiLmRhdGUpIHtcbiAgICAgIHJldHVybiAxXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiAtMVxuICAgIH1cbiAgfSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEFsbFBvc3RJZHMoKSB7XG4gIGNvbnN0IGZpbGVOYW1lcyA9IGZzLnJlYWRkaXJTeW5jKHBvc3RzRGlyZWN0b3J5KVxuXG4gIC8vIFJldHVybnMgYW4gYXJyYXkgdGhhdCBsb29rcyBsaWtlIHRoaXM6XG4gIC8vIFtcbiAgLy8gICB7XG4gIC8vICAgICBwYXJhbXM6IHtcbiAgLy8gICAgICAgaWQ6ICdzc2ctc3NyJ1xuICAvLyAgICAgfVxuICAvLyAgIH0sXG4gIC8vICAge1xuICAvLyAgICAgcGFyYW1zOiB7XG4gIC8vICAgICAgIGlkOiAncHJlLXJlbmRlcmluZydcbiAgLy8gICAgIH1cbiAgLy8gICB9XG4gIC8vIF1cbiAgcmV0dXJuIGZpbGVOYW1lcy5tYXAoZmlsZU5hbWUgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICBwYXJhbXM6IHtcbiAgICAgICAgaWQ6IGZpbGVOYW1lLnJlcGxhY2UoL1xcLm1kJC8sICcnKVxuICAgICAgfVxuICAgIH1cbiAgfSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFBvc3REYXRhKGlkKSB7XG4gIGNvbnN0IGZ1bGxQYXRoID0gcGF0aC5qb2luKHBvc3RzRGlyZWN0b3J5LCBgJHtpZH0ubWRgKVxuICBjb25zdCBmaWxlQ29udGVudHMgPSBmcy5yZWFkRmlsZVN5bmMoZnVsbFBhdGgsICd1dGY4JylcblxuICAvLyBVc2UgZ3JheS1tYXR0ZXIgdG8gcGFyc2UgdGhlIHBvc3QgbWV0YWRhdGEgc2VjdGlvblxuICBjb25zdCBtYXR0ZXJSZXN1bHQgPSBtYXR0ZXIoZmlsZUNvbnRlbnRzKVxuXG4gIC8vIENvbWJpbmUgdGhlIGRhdGEgd2l0aCB0aGUgaWRcbiAgcmV0dXJuIHtcbiAgICBpZCxcbiAgICAuLi5tYXR0ZXJSZXN1bHQuZGF0YVxuICB9XG59Il19 */\\n/*@ sourceURL=/Users/nainar/nainadotapp/pages/posts.js */\"));\n}\n\nexport default HomePage;\nexport function getSortedPostsData() {\n  // Get file names under /posts\n  const fileNames = fs.readdirSync(postsDirectory);\n  const allPostsData = fileNames.map(fileName => {\n    // Remove \".md\" from file name to get id\n    const id = fileName.replace(/\\.md$/, ''); // Read markdown file as string\n\n    const fullPath = path.join(postsDirectory, fileName);\n    const fileContents = fs.readFileSync(fullPath, 'utf8'); // Use gray-matter to parse the post metadata section\n\n    const matterResult = matter(fileContents); // Combine the data with the id\n\n    return _objectSpread({\n      id\n    }, matterResult.data);\n  }); // Sort posts by date\n\n  return allPostsData.sort((a, b) => {\n    if (a.date < b.date) {\n      return 1;\n    } else {\n      return -1;\n    }\n  });\n}\nexport function getAllPostIds() {\n  const fileNames = fs.readdirSync(postsDirectory); // Returns an array that looks like this:\n  // [\n  //   {\n  //     params: {\n  //       id: 'ssg-ssr'\n  //     }\n  //   },\n  //   {\n  //     params: {\n  //       id: 'pre-rendering'\n  //     }\n  //   }\n  // ]\n\n  return fileNames.map(fileName => {\n    return {\n      params: {\n        id: fileName.replace(/\\.md$/, '')\n      }\n    };\n  });\n}\nexport function getPostData(id) {\n  const fullPath = path.join(postsDirectory, `${id}.md`);\n  const fileContents = fs.readFileSync(fullPath, 'utf8'); // Use gray-matter to parse the post metadata section\n\n  const matterResult = matter(fileContents); // Combine the data with the id\n\n  return _objectSpread({\n    id\n  }, matterResult.data);\n}","map":{"version":3,"sources":["/Users/nainar/nainadotapp/pages/posts.js"],"names":["Layout","Link","path","config","amp","postsDirectory","join","process","cwd","HomePage","getSortedPostsData","fileNames","fs","readdirSync","allPostsData","map","fileName","id","replace","fullPath","fileContents","readFileSync","matterResult","matter","data","sort","a","b","date","getAllPostIds","params","getPostData"],"mappings":";;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAO,MAAMC,MAAM,GAAG;AAAEC,EAAAA,GAAG,EAAE;AAAP,CAAf;AACP,MAAMC,cAAc,GAAGH,IAAI,CAACI,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,OAAzB,CAAvB;;AAEA,SAASC,QAAT,GAAoB;AAClB,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EAHJ,CADF;AAAA;AAAA;AAAA,gxJADF;AA0CD;;AAED,eAAeA,QAAf;AAEA,OAAO,SAASC,kBAAT,GAA8B;AACnC;AACA,QAAMC,SAAS,GAAGC,EAAE,CAACC,WAAH,CAAeR,cAAf,CAAlB;AACA,QAAMS,YAAY,GAAGH,SAAS,CAACI,GAAV,CAAcC,QAAQ,IAAI;AAC7C;AACA,UAAMC,EAAE,GAAGD,QAAQ,CAACE,OAAT,CAAiB,OAAjB,EAA0B,EAA1B,CAAX,CAF6C,CAI7C;;AACA,UAAMC,QAAQ,GAAGjB,IAAI,CAACI,IAAL,CAAUD,cAAV,EAA0BW,QAA1B,CAAjB;AACA,UAAMI,YAAY,GAAGR,EAAE,CAACS,YAAH,CAAgBF,QAAhB,EAA0B,MAA1B,CAArB,CAN6C,CAQ7C;;AACA,UAAMG,YAAY,GAAGC,MAAM,CAACH,YAAD,CAA3B,CAT6C,CAW7C;;AACA;AACEH,MAAAA;AADF,OAEKK,YAAY,CAACE,IAFlB;AAID,GAhBoB,CAArB,CAHmC,CAoBnC;;AACA,SAAOV,YAAY,CAACW,IAAb,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACjC,QAAID,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB;AACnB,aAAO,CAAP;AACD,KAFD,MAEO;AACL,aAAO,CAAC,CAAR;AACD;AACF,GANM,CAAP;AAOD;AAED,OAAO,SAASC,aAAT,GAAyB;AAC9B,QAAMlB,SAAS,GAAGC,EAAE,CAACC,WAAH,CAAeR,cAAf,CAAlB,CAD8B,CAG9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAOM,SAAS,CAACI,GAAV,CAAcC,QAAQ,IAAI;AAC/B,WAAO;AACLc,MAAAA,MAAM,EAAE;AACNb,QAAAA,EAAE,EAAED,QAAQ,CAACE,OAAT,CAAiB,OAAjB,EAA0B,EAA1B;AADE;AADH,KAAP;AAKD,GANM,CAAP;AAOD;AAED,OAAO,SAASa,WAAT,CAAqBd,EAArB,EAAyB;AAC9B,QAAME,QAAQ,GAAGjB,IAAI,CAACI,IAAL,CAAUD,cAAV,EAA2B,GAAEY,EAAG,KAAhC,CAAjB;AACA,QAAMG,YAAY,GAAGR,EAAE,CAACS,YAAH,CAAgBF,QAAhB,EAA0B,MAA1B,CAArB,CAF8B,CAI9B;;AACA,QAAMG,YAAY,GAAGC,MAAM,CAACH,YAAD,CAA3B,CAL8B,CAO9B;;AACA;AACEH,IAAAA;AADF,KAEKK,YAAY,CAACE,IAFlB;AAID","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport path from 'path'\n\nexport const config = { amp: true };\nconst postsDirectory = path.join(process.cwd(), 'posts')\n\nfunction HomePage() {\n  return (\n    <Layout>\n      <main>\n          <h1>Hi! 👋🏾 Yup, still Naina...</h1>\n          <br/>\n          <div>\n            Guess I still haven't put up any posts. Oops! 🤷🏾.\n          </div>          \n      </main>\n    <style jsx>{`\n    @font-face {\n        font-family: 'Bai Jamjuree';\n        font-style: sans-serif;\n        src: url('https://fonts.googleapis.com/css?family=Bai+Jamjuree');\n    }\n    * {\n        font-family: 'Bai Jamjuree', sans-serif;\n        text-decoration: none;\n    }\n    h1 {\n        color:#d8156e;\n    }\n    main {\n      position: fixed;\n      margin: 0;\n      color: #333333;\n      top: calc(50% - 16px);\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n    \n    @media only screen and (max-width: 768px) {\n      main {\n        top: 4em;\n        left: 1em;\n        transform: translate(0%, 0%);\n      }  \n    }\n\n  `}</style>\n    </Layout>\n  );\n}\n\nexport default HomePage;\n\nexport function getSortedPostsData() {\n  // Get file names under /posts\n  const fileNames = fs.readdirSync(postsDirectory)\n  const allPostsData = fileNames.map(fileName => {\n    // Remove \".md\" from file name to get id\n    const id = fileName.replace(/\\.md$/, '')\n\n    // Read markdown file as string\n    const fullPath = path.join(postsDirectory, fileName)\n    const fileContents = fs.readFileSync(fullPath, 'utf8')\n\n    // Use gray-matter to parse the post metadata section\n    const matterResult = matter(fileContents)\n\n    // Combine the data with the id\n    return {\n      id,\n      ...matterResult.data\n    }\n  })\n  // Sort posts by date\n  return allPostsData.sort((a, b) => {\n    if (a.date < b.date) {\n      return 1\n    } else {\n      return -1\n    }\n  })\n}\n\nexport function getAllPostIds() {\n  const fileNames = fs.readdirSync(postsDirectory)\n\n  // Returns an array that looks like this:\n  // [\n  //   {\n  //     params: {\n  //       id: 'ssg-ssr'\n  //     }\n  //   },\n  //   {\n  //     params: {\n  //       id: 'pre-rendering'\n  //     }\n  //   }\n  // ]\n  return fileNames.map(fileName => {\n    return {\n      params: {\n        id: fileName.replace(/\\.md$/, '')\n      }\n    }\n  })\n}\n\nexport function getPostData(id) {\n  const fullPath = path.join(postsDirectory, `${id}.md`)\n  const fileContents = fs.readFileSync(fullPath, 'utf8')\n\n  // Use gray-matter to parse the post metadata section\n  const matterResult = matter(fileContents)\n\n  // Combine the data with the id\n  return {\n    id,\n    ...matterResult.data\n  }\n}"]},"metadata":{},"sourceType":"module"}