{"ast":null,"code":"import { NextPageContext } from \"next\";\nimport { getSortedPostsData } from '../lib/posts';\n\nconst blogPostsXml = blogPostsData => {\n  let latestPost = 0;\n  let postsXml = \"\";\n  blogPostsData.map(post => {\n    const postDate = Date.parse(post.date);\n\n    if (!latestPost || postDate > latestPost) {\n      latestPost = postDate;\n    }\n\n    postsXml += `\n    <url>\n      <loc>${post.id}</loc>\n      <lastmod>${postDate}</lastmod>\n      <priority>0.80</priority>\n    </url>`;\n  });\n  return {\n    postsXml,\n    latestPost\n  };\n};\n\nconst sitemapXml = blogPostsData => {\n  const {\n    postsXml,\n    latestPost\n  } = blogPostsXml(blogPostsData);\n  return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n    <url>\n      <loc>https://naina.app/</loc>\n      <lastmod>${latestPost}</lastmod>\n      <priority>1.00</priority>\n    </url>\n    <url>\n      <loc>https://naina.app/posts</loc>\n      <priority>0.8</priority>\n    </url>\n    <url>\n      <loc>https://naina.app/work</loc>\n      <priority>0.7</priority>\n    </url>\n    <url>\n      <loc>https://naina.app/talks</loc>\n      <priority>0.5</priority>\n    </url>\n    ${postsXml}\n  </urlset>`;\n};\n\nconst Sitemap = () => {};\n\nexport async function getStaticProps(res) {\n  const blogPostsData = getSortedPostsData();\n  res.setHeader(\"Content-Type\", \"text/xml\");\n  res.write(sitemapXml(blogPosts));\n  res.end();\n}\n;\nexport default Sitemap;","map":{"version":3,"sources":["/Users/nainar/nainadotapp/pages/sitemap.xml.js"],"names":["NextPageContext","getSortedPostsData","blogPostsXml","blogPostsData","latestPost","postsXml","map","post","postDate","Date","parse","date","id","sitemapXml","Sitemap","getStaticProps","res","setHeader","write","blogPosts","end"],"mappings":"AAAA,SAASA,eAAT,QAAgC,MAAhC;AACA,SAASC,kBAAT,QAAmC,cAAnC;;AAEA,MAAMC,YAAY,GAAIC,aAAD,IAAmB;AACtC,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAIC,QAAQ,GAAG,EAAf;AACAF,EAAAA,aAAa,CAACG,GAAd,CAAkBC,IAAI,IAAI;AACxB,UAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACI,IAAhB,CAAjB;;AACA,QAAI,CAACP,UAAD,IAAeI,QAAQ,GAAGJ,UAA9B,EAA0C;AACxCA,MAAAA,UAAU,GAAGI,QAAb;AACD;;AACDH,IAAAA,QAAQ,IAAK;;aAEJE,IAAI,CAACK,EAAG;iBACJJ,QAAS;;WAHtB;AAMD,GAXD;AAYA,SAAO;AACLH,IAAAA,QADK;AAELD,IAAAA;AAFK,GAAP;AAID,CAnBD;;AAqBA,MAAMS,UAAU,GAAIV,aAAD,IAAmB;AACpC,QAAM;AAAEE,IAAAA,QAAF;AAAYD,IAAAA;AAAZ,MAA2BF,YAAY,CAACC,aAAD,CAA7C;AACA,SAAQ;;;;iBAIOC,UAAW;;;;;;;;;;;;;;;MAetBC,QAAS;YAnBb;AAqBD,CAvBD;;AAyBA,MAAMS,OAAO,GAAG,MAAM,CAAE,CAAxB;;AAEA,OAAO,eAAeC,cAAf,CAA8BC,GAA9B,EAAmC;AACxC,QAAMb,aAAa,GAAGF,kBAAkB,EAAxC;AACAe,EAAAA,GAAG,CAACC,SAAJ,CAAc,cAAd,EAA8B,UAA9B;AACAD,EAAAA,GAAG,CAACE,KAAJ,CAAUL,UAAU,CAACM,SAAD,CAApB;AACAH,EAAAA,GAAG,CAACI,GAAJ;AACD;AAAA;AAED,eAAeN,OAAf","sourcesContent":["import { NextPageContext } from \"next\";\nimport { getSortedPostsData } from '../lib/posts'\n\nconst blogPostsXml = (blogPostsData) => {\n  let latestPost = 0;\n  let postsXml = \"\";\n  blogPostsData.map(post => {\n    const postDate = Date.parse(post.date);\n    if (!latestPost || postDate > latestPost) {\n      latestPost = postDate;\n    }\n    postsXml += `\n    <url>\n      <loc>${post.id}</loc>\n      <lastmod>${postDate}</lastmod>\n      <priority>0.80</priority>\n    </url>`;\n  });\n  return {\n    postsXml,\n    latestPost\n  };\n};\n\nconst sitemapXml = (blogPostsData) => {\n  const { postsXml, latestPost } = blogPostsXml(blogPostsData);\n  return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n    <url>\n      <loc>https://naina.app/</loc>\n      <lastmod>${latestPost}</lastmod>\n      <priority>1.00</priority>\n    </url>\n    <url>\n      <loc>https://naina.app/posts</loc>\n      <priority>0.8</priority>\n    </url>\n    <url>\n      <loc>https://naina.app/work</loc>\n      <priority>0.7</priority>\n    </url>\n    <url>\n      <loc>https://naina.app/talks</loc>\n      <priority>0.5</priority>\n    </url>\n    ${postsXml}\n  </urlset>`;\n};\n\nconst Sitemap = () => {};\n\nexport async function getStaticProps(res) {\n  const blogPostsData = getSortedPostsData();\n  res.setHeader(\"Content-Type\", \"text/xml\");\n  res.write(sitemapXml(blogPosts));\n  res.end();\n};\n\nexport default Sitemap;"]},"metadata":{},"sourceType":"module"}