{"version":3,"file":"static/webpack/static/development/pages/sitemap.xml.js.9834d86a6bc9a5b70ce8.hot-update.js","sources":["webpack:///./pages/sitemap.xml.ts"],"sourcesContent":["import { NextPageContext } from \"next\";\nimport { getSortedPostsData } from '../lib/posts'\nimport { parseISO, format } from 'date-fns'\n\nconst blogPostsXml = (blogPostsData) => {\n  let latestPost = blogPostsData[0].date;\n  let postsXml = \"\";\n  blogPostsData.map(post => {\n    const postDate = parseISO(post.date);\n    if (!latestPost || postDate > latestPost) {\n      latestPost = postDate;\n    }\n    postsXml += `\n    <url>\n<<<<<<< HEAD\n      <loc>https://naina.app/${post.id}</loc>\n=======\n      <loc>${post.id}</loc>\n>>>>>>> 90d21c1416505563ad864017b069be39758e6f79\n      <lastmod>${format(postDate, 'LLLL d, yyyy')}</lastmod>\n      <priority>0.80</priority>\n    </url>`;\n  });\n  return {\n    postsXml,\n    latestPost\n  };\n};\n\nconst sitemapXml = (blogPostsData) => {\n  const { postsXml, latestPost } = blogPostsXml(blogPostsData);\n  return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n    <url>\n      <loc>https://naina.app/</loc>\n      <lastmod>https://naina.app/${latestPost}</lastmod>\n      <priority>1.00</priority>\n    </url>\n    <url>\n      <loc>https://naina.app/posts</loc>\n      <priority>0.8</priority>\n    </url>\n    <url>\n      <loc>https://naina.app/work</loc>\n      <priority>0.7</priority>\n    </url>\n    <url>\n      <loc>https://naina.app/talks</loc>\n      <priority>0.5</priority>\n    </url>\n    ${postsXml}\n  </urlset>`;\n};\n\nexport default class Sitemap {\n  static async getInitialProps({ res }: any) {\n    const blogPostsData = getSortedPostsData();\n    res.setHeader(\"Content-Type\", \"text/xml\");\n    res.write(sitemapXml(blogPostsData));\n    res.end();\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAUA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAqBA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;A","sourceRoot":""}